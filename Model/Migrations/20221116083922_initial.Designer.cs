// <auto-generated />
using System;
using Library_System.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20221116083922_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Library_System.Model.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Book_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Available_To_Reserve")
                        .HasColumnType("bit");

                    b.Property<Guid>("Library_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Reserved_User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Library_Id");

                    b.HasIndex("Reserved_User_Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Library_System.Model.Library", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Book_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.HasKey("Id");

                    b.HasIndex("Book_Id");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("Library_System.Model.Library_Book", b =>
                {
                    b.Property<Guid>("Book_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Library_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Book_Id", "Library_Id");

                    b.HasIndex("Library_Id");

                    b.ToTable("Library_Books");
                });

            modelBuilder.Entity("Library_System.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Library_System.Model.Book", b =>
                {
                    b.HasOne("Library_System.Model.Library", "library")
                        .WithMany()
                        .HasForeignKey("Library_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_System.Model.User", "User")
                        .WithMany("Books")
                        .HasForeignKey("Reserved_User_Id");

                    b.Navigation("User");

                    b.Navigation("library");
                });

            modelBuilder.Entity("Library_System.Model.Library", b =>
                {
                    b.HasOne("Library_System.Model.Book", "Books")
                        .WithMany()
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library_System.Model.Library_Book", b =>
                {
                    b.HasOne("Library_System.Model.Book", "Book")
                        .WithMany("library_Books")
                        .HasForeignKey("Book_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_System.Model.Library", "Library")
                        .WithMany("library_Books")
                        .HasForeignKey("Library_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("Library_System.Model.Book", b =>
                {
                    b.Navigation("library_Books");
                });

            modelBuilder.Entity("Library_System.Model.Library", b =>
                {
                    b.Navigation("library_Books");
                });

            modelBuilder.Entity("Library_System.Model.User", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
